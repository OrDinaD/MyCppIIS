#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ë–ì–£–ò–† —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö cookies
"""

import requests
import json

API_BASE = "https://iis.bsuir.by/api/v1"

def login_and_test_all():
    """–õ–æ–≥–∏–Ω–∏–º—Å—è –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ endpoints —Å —Å–µ—Å—Å–∏–µ–π"""
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
    session = requests.Session()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    session.headers.update({
        "Content-Type": "application/json",
        "User-Agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 18_5 like Mac OS X) AppleWebKit/605.1.15"
    })
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ë–ì–£–ò–† —Å —Å–µ—Å—Å–∏—è–º–∏")
    print("="*60)
    
    # === –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø ===
    print("üîê –í—ã–ø–æ–ª–Ω—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...")
    login_data = {
        "username": "42850012",
        "password": "Bsuirinyouv.12_"
    }
    
    login_response = session.post(f"{API_BASE}/auth/login", json=login_data)
    
    print(f"üì• –°—Ç–∞—Ç—É—Å –ª–æ–≥–∏–Ω–∞: {login_response.status_code}")
    if login_response.status_code == 200:
        user_info = login_response.json()
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è!")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info['fio']}")
        print(f"üë• –ì—Ä—É–ø–ø–∞: {user_info['group']}")
        print(f"üìß Email: {user_info['email']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies
        print(f"\nüç™ –ü–æ–ª—É—á–µ–Ω—ã cookies: {len(session.cookies)} —à—Ç—É–∫")
        for cookie in session.cookies:
            print(f"  - {cookie.name}: {cookie.value[:20]}...")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏!")
        print(login_response.text)
        return
    
    print("\n" + "="*60)
    print("üìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API ENDPOINTS")
    print("="*60)
    
    # === –ó–ê–ß–ï–¢–ù–ê–Ø –ö–ù–ò–ñ–ö–ê ===
    print("\nüìö –ü–æ–ª—É—á–∞–µ–º –∑–∞—á–µ—Ç–Ω—É—é –∫–Ω–∏–∂–∫—É...")
    markbook_response = session.get(f"{API_BASE}/markbook")
    
    print(f"üì• –°—Ç–∞—Ç—É—Å: {markbook_response.status_code}")
    if markbook_response.status_code == 200:
        markbook_data = markbook_response.json()
        print("‚úÖ –ó–∞—á–µ—Ç–Ω–∞—è –∫–Ω–∏–∂–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!")
        print(f"üìñ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(markbook_data) if isinstance(markbook_data, list) else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π
        if isinstance(markbook_data, list) and len(markbook_data) > 0:
            print("üìã –ü–µ—Ä–≤—ã–µ –∑–∞–ø–∏—Å–∏:")
            for i, record in enumerate(markbook_data[:3]):
                print(f"  {i+1}. {record.get('subject', 'N/A')} - {record.get('mark', 'N/A')}")
        else:
            print(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(markbook_data, indent=2, ensure_ascii=False)[:500]}...")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—á–µ—Ç–Ω–æ–π –∫–Ω–∏–∂–∫–∏")
        print(markbook_response.text[:300])
    
    # === –õ–ò–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===
    print("\nüë§ –ü–æ–ª—É—á–∞–µ–º –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...")
    personal_response = session.get(f"{API_BASE}/personal-information")
    
    print(f"üì• –°—Ç–∞—Ç—É—Å: {personal_response.status_code}")
    if personal_response.status_code == 200:
        personal_data = personal_response.json()
        print("‚úÖ –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞!")
        print(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(personal_data, indent=2, ensure_ascii=False)[:500]}...")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        print(personal_response.text[:300])
    
    # === –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ì–†–£–ü–ü–ï ===
    print("\nüë• –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ...")
    group_response = session.get(f"{API_BASE}/student-group")
    
    print(f"üì• –°—Ç–∞—Ç—É—Å: {group_response.status_code}")
    if group_response.status_code == 200:
        group_data = group_response.json()
        print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ –ø–æ–ª—É—á–µ–Ω–∞!")
        if isinstance(group_data, dict):
            print(f"üë• –ì—Ä—É–ø–ø–∞: {group_data.get('name', 'N/A')}")
            print(f"üè´ –§–∞–∫—É–ª—å—Ç–µ—Ç: {group_data.get('faculty', 'N/A')}")
            students = group_data.get('students', [])
            print(f"üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ: {len(students) if isinstance(students, list) else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
        else:
            print(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(group_data, indent=2, ensure_ascii=False)[:500]}...")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ")
        print(group_response.text[:300])
    
    # === –†–ê–°–ü–ò–°–ê–ù–ò–ï ===
    print("\nüìÖ –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ...")
    schedule_response = session.get(f"{API_BASE}/schedule")
    
    print(f"üì• –°—Ç–∞—Ç—É—Å: {schedule_response.status_code}")
    if schedule_response.status_code == 200:
        schedule_data = schedule_response.json()
        print("‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")
        print(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(schedule_data, indent=2, ensure_ascii=False)[:500]}...")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
        print(schedule_response.text[:300])
    
    # === –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–ò ===
    print("\nüë®‚Äçüè´ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π...")
    employees_response = session.get(f"{API_BASE}/employees")
    
    print(f"üì• –°—Ç–∞—Ç—É—Å: {employees_response.status_code}")
    if employees_response.status_code == 200:
        employees_data = employees_response.json()
        print("‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–µ–Ω!")
        if isinstance(employees_data, list):
            print(f"üë®‚Äçüè´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: {len(employees_data)}")
        else:
            print(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(employees_data, indent=2, ensure_ascii=False)[:500]}...")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π")
        print(employees_response.text[:300])
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("="*60)

if __name__ == "__main__":
    login_and_test_all()